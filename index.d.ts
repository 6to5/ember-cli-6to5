type BabelOptions = {
	babel: Object
}
type BuildedOptions = {
	annotation: string
	sourceMaps: any
	throwUnlessParallelizable: boolean
	plugins: any[]
	presets: any[]
	moduleIds?: boolean
	resolveModuleSource?: string
	highlightCode: boolean
	babelrc: boolean
}

declare namespace EmberCliBabel {
	/** Declaration file generated by dts-gen */

	export const configKey: string;

	export const name: string;

	export function buildBabelOptions(_config:Partial<BabelOptions>): BuildedOptions;

	export function included(app: any): void;

	export function init(): void;

	export function isPluginRequired(pluginName: string): boolean;

	export function setupPreprocessorRegistry(type: any, registry: any): void;

	export function shouldCompileModules(): boolean;

	export function transpileTree(inputTree: Object, config:Partial<BabelOptions>): void;

	export function treeForVendor(): void;

	export namespace included {
		const prototype: {
			
		};

	}


}
export = EmberCliBabel;